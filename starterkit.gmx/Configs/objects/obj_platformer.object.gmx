<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// creating variables that can be used throughout the object
movespeed = 4;  // speed your character moves at
jumpspeed = 7;  // speed your character jumps at
hsp = 0;        // horizontal movement speed
vsp = 0;        // vertical movement speed
grav = 0.2;     // gravity constant
hp = 10;
maxhp = hp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// getting the horizontal direction for horizontal movement
// if you press key_right (either D or right arrow key)
// it sets the horizontal speed to 1 * movespeed, or positive movespeed
// if you press key_left (either A or left arrow key)
// it sets the horizontal speed to -1 (0 - 1) * movespeed, or negative movespeed
hsp = movespeed * (input.key_right - input.key_left);

// this code caps the vertical speed at 10 pixels per frame downwards.
// if your speed doesn't reach 10 pixels per frame, it accelerates it by 0.2 pixels per frame
if(vsp &lt;= 10){
    vsp += grav;
}

// checks if your player is touching the wall beneath it (using place_meeting)
// if it is touching, it will set your vertical speed to -jumpspeed, and either 0 or 1 depending on the input
// this means, if not pressing, vsp = 0, but if you are, vsp = -jumpspeed (remember, positive numbers go downwards, negative goes upwards)
if(place_meeting(x, y + 1, obj_wall)){
    vsp = -jumpspeed * input.key_jump;
}

// horizontal collisions, this checks if you are within a single frames distance from the wall
// if you are, it will move you as close as possible before touching the wall.
// it then sets your horizontal speed to 0
if(place_meeting(x + hsp, y, obj_wall)){
    while(!place_meeting(x + sign(hsp), y, obj_wall)){
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

// vertical collision works the same way as horizontal collisions
if(place_meeting(x, y + vsp, obj_wall)){
    while(!place_meeting(x, y + sign(vsp), obj_wall)){
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

// this checks if you are moving horizontally. If you are, it changes your sprite to
// make it face the right direction
if(hsp != 0){
    image_xscale = sign(hsp);
}

if(hp &lt;= 0){
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(32,32,string(hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
